import { Component, Input } from '@angular/core';
import { extractMath } from 'extract-math';
import { DomSanitizer } from '@angular/platform-browser';
import { KatexService } from './ng-katex.service';
var KatexHtmlComponent = /** @class */ (function () {
    function KatexHtmlComponent(domSanitizer, katexService) {
        this.domSanitizer = domSanitizer;
        this.katexService = katexService;
    }
    Object.defineProperty(KatexHtmlComponent.prototype, "allHtml", {
        get: function () {
            var _this = this;
            var segments = this.segments;
            var allHtml = segments.map(function (seg) {
                if (seg.math) {
                    return _this.katexService.renderToString(seg.raw, { displayMode: seg.type === 'display' });
                }
                else {
                    return seg.value;
                }
            }).reduce(function (total, current) {
                return total += current;
            });
            return this.domSanitizer.bypassSecurityTrustHtml(allHtml);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KatexHtmlComponent.prototype, "segments", {
        get: function () {
            return extractMath(this.html);
        },
        enumerable: true,
        configurable: true
    });
    KatexHtmlComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ng-katex-html',
                    template: "<span [innerHTML]=\"allHtml\"></span>"
                },] },
    ];
    /** @nocollapse */
    KatexHtmlComponent.ctorParameters = function () { return [
        { type: DomSanitizer, },
        { type: KatexService, },
    ]; };
    KatexHtmlComponent.propDecorators = {
        'html': [{ type: Input },],
    };
    return KatexHtmlComponent;
}());
export { KatexHtmlComponent };
//# sourceMappingURL=ng-katex-html.component.js.map