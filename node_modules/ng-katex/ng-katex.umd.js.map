{"version":3,"file":"ng-katex.umd.js","sources":["../src/ng-katex.component.ts","../src/ng-katex-paragraph.component.ts","../src/ng-katex.service.ts","../src/ng-katex.directive.ts","../src/ng-katex-html.component.ts","../src/ng-katex.module.ts"],"sourcesContent":["import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport * as ko from './ng-katex.options';\n\n@Component({\n  selector: 'ng-katex',\n  template: `\n    <span [katex]=\"equation\"\n          [katex-options]=\"options\"\n          (someEvent)=\"hasError($event)\">\n    </span>\n  `,\n})\nexport class KatexComponent {\n\n  @Input() equation: string;\n  @Input() options?: ko.KatexOptions;\n  @Output() onError = new EventEmitter<any>();\n\n  hasError(error) {\n    this.onError.emit(error);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { extractMath, Segment } from 'extract-math';\n\n@Component({\n  selector: 'ng-katex-paragraph',\n  template: `\n    <p>\n      <ng-container *ngFor=\"let segment of segments\">\n        <ng-katex\n          *ngIf=\"segment.math else text\"\n          [equation]=\"segment.raw\"\n          [options]=\"{ displayMode: segment.type === 'display' }\">\n        </ng-katex>\n        <ng-template #text>{{ segment.value }}</ng-template>\n      </ng-container>\n    </p>\n  `\n})\nexport class KatexParagraphComponent {\n  @Input() paragraph: string;\n\n  get segments (): Segment[] {\n    return extractMath(this.paragraph);\n  }\n}\n","import { ElementRef, Injectable } from '@angular/core';\nimport * as ko from './ng-katex.options';\n\nimport * as katex from 'katex';\n\n@Injectable()\nexport class KatexService {\n\n  render(equation: string, element: ElementRef, options?: ko.KatexOptions) {\n    return katex.render(equation, element.nativeElement, options);\n  }\n\n  renderToString(equation: string, options?: ko.KatexOptions): string {\n    return katex.renderToString(equation, options);\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { KatexService } from './ng-katex.service';\nimport * as ko from './ng-katex.options';\n\n@Directive({\n  selector: '[katex]',\n})\nexport class KatexDirective {\n\n  @Input('katex') equation: string;\n  @Input('katex-options') options: ko.KatexOptions;\n\n  @Output() onError = new EventEmitter<any>();\n\n  constructor(private el: ElementRef,\n              private katexService: KatexService) {}\n\n  ngOnChanges() {\n    try {\n      this.katexService.render(this.equation, this.el, this.options);\n    } catch (e) {\n      this.onError.emit(e);\n    }\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { extractMath, Segment } from 'extract-math';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { KatexService } from './ng-katex.service';\n\n\n@Component({\n  selector: 'ng-katex-html',\n  template: `<span [innerHTML]=\"allHtml\"></span>`\n})\nexport class KatexHtmlComponent {\n  constructor(private domSanitizer: DomSanitizer, private katexService: KatexService) { }\n  @Input() html: string;\n\n  get allHtml(): SafeHtml {\n    let segments = this.segments;\n    var allHtml = segments.map((seg) => {\n      if (seg.math) {\n        return this.katexService.renderToString(seg.raw, { displayMode: seg.type === 'display' });\n      }\n      else {\n        return seg.value;\n      }\n    }).reduce((total, current) => {\n      return total += current;\n    });\n    return this.domSanitizer.bypassSecurityTrustHtml(allHtml);\n  }\n\n  get segments(): Segment[] {\n    return extractMath(this.html);\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { KatexService } from './ng-katex.service';\nimport { KatexDirective } from './ng-katex.directive';\nimport { KatexComponent } from './ng-katex.component';\nimport { KatexParagraphComponent } from './ng-katex-paragraph.component';\nimport { KatexHtmlComponent } from './ng-katex-html.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    KatexService,\n  ],\n  declarations: [\n    KatexDirective,\n    KatexComponent,\n    KatexParagraphComponent,\n    KatexHtmlComponent\n  ],\n  exports: [\n    KatexComponent,\n    KatexParagraphComponent,\n    KatexHtmlComponent\n  ],\n})\nexport class KatexModule {}\n"],"names":["this","EventEmitter","KatexComponent","error","onError","emit","tslib_1.__decorate","Input","Output","Component","selector","template","Object","KatexParagraphComponent","extractMath","paragraph","KatexService","equation","element","options","katex.render","nativeElement","katex.renderToString","Injectable","el","katexService","KatexDirective","render","e","Directive","ElementRef","domSanitizer","KatexHtmlComponent","allHtml","segments","map","seg","math","_this","renderToString","raw","displayMode","type","value","reduce","total","current","bypassSecurityTrustHtml","html","DomSanitizer","KatexModule","NgModule","imports","CommonModule","providers","declarations","exports"],"mappings":"i8BASA,aAaYA,aAAU,IAAIC,eAK1B,OAHEC,qBAAA,SAASC,GACPH,KAAKI,QAAQC,KAAKF,IALXG,GAARC,kEACQD,GAARC,iEACSD,GAATE,kEAJUN,KATZO,YAAU,CACTC,SAAU,WACVC,SAAU,qIAOCT,mBCAb,cAMA,OAHEU,sBAAIC,4BAAJ,WACE,OAAOC,cAAYd,KAAKe,4CAHjBT,GAARC,mEADUM,KAfZJ,YAAU,CACTC,SAAU,qBACVC,SAAU,qWAaCE,mBCZb,cASA,OAPEG,mBAAA,SAAOC,EAAkBC,EAAqBC,GAC5C,OAAOC,SAAaH,EAAUC,EAAQG,cAAeF,IAGvDH,2BAAA,SAAeC,EAAkBE,GAC/B,OAAOG,iBAAqBL,EAAUE,IAP7BH,KADZO,gBACYP,mBCcX,WAAoBQ,EACAC,GADAzB,QAAAwB,EACAxB,kBAAAyB,EAHVzB,aAAU,IAAIC,eAa1B,OAREyB,wBAAA,WACE,IACE1B,KAAKyB,aAAaE,OAAO3B,KAAKiB,SAAUjB,KAAKwB,GAAIxB,KAAKmB,SACtD,MAAOS,GACP5B,KAAKI,QAAQC,KAAKuB,KAZNtB,GAAfC,QAAM,iEACiBD,GAAvBC,QAAM,wEAEGD,GAATE,kEALUkB,KAHZG,YAAU,CACTnB,SAAU,mCAScoB,aACUd,KARvBU,mBCFX,WAAoBK,EAAoCN,GAApCzB,kBAAA+B,EAAoC/B,kBAAAyB,EAqB1D,OAlBEb,sBAAIoB,2BAAJ,WAAA,WAEMC,EADWjC,KAAKkC,SACGC,IAAI,SAACC,GAC1B,OAAIA,EAAIC,KACCC,EAAKb,aAAac,eAAeH,EAAII,IAAK,CAAEC,YAA0B,YAAbL,EAAIM,OAG7DN,EAAIO,QAEZC,OAAO,SAACC,EAAOC,GAChB,OAAOD,EAASC,IAElB,OAAO9C,KAAK+B,aAAagB,wBAAwBd,oCAGnDrB,sBAAIoB,4BAAJ,WACE,OAAOlB,cAAYd,KAAKgD,uCAlBjB1C,GAARC,8DAFUyB,KAJZvB,YAAU,CACTC,SAAU,gBACVC,SAAU,+DAGwBsC,eAAoCjC,KAD3DgB,mBCiBb,cAA0B,OAAbkB,KAnBZC,WAAS,CACRC,QAAS,CACPC,gBAEFC,UAAW,CACTtC,GAEFuC,aAAc,CACZ7B,EACAxB,EACAW,EACAmB,GAEFwB,QAAS,CACPtD,EACAW,EACAmB,MAGSkB"}