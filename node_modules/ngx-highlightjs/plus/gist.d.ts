import { PipeTransform, EventEmitter } from '@angular/core';
import { CodeLoader } from './code-loader';
import { Gist } from './gist.model';
import * as i0 from "@angular/core";
export declare class GistDirective {
    private _loader;
    constructor(_loader: CodeLoader);
    set gist(value: string);
    gistLoad: EventEmitter<Gist>;
    static ɵfac: i0.ɵɵFactoryDeclaration<GistDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<GistDirective, "[gist]", never, { "gist": "gist"; }, { "gistLoad": "gistLoad"; }, never, never, false, never>;
}
export declare class GistFilePipe implements PipeTransform {
    transform(gist: Gist, fileName: string): string | null;
    static ɵfac: i0.ɵɵFactoryDeclaration<GistFilePipe, never>;
    static ɵpipe: i0.ɵɵPipeDeclaration<GistFilePipe, "gistFile", false>;
}
