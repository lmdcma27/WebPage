{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../header/header.component\";\nimport * as i2 from \"../table-of-contents/table-of-contents.component\";\nimport * as i3 from \"../code-box/code-box.component\";\nexport let MysqlComponent = /*#__PURE__*/(() => {\n  class MysqlComponent {\n    constructor() {\n      this.tableOfContents = [['section1', 'Introduction'], ['section2', 'MySQL Installation'], ['section3', 'Connection from Code OSS'], ['section4', 'Connection from Python'], ['section5', 'Backup and Restore Databases']];\n      this.sections = [[]];\n    }\n    ngOnInit() {\n      this.loadScript('./assets/prism.js', 'js');\n      window.onload = () => {\n        this.loadScript('./assets/main.js', 'js');\n      };\n    }\n    loadScript(scriptUrl, Tipo) {\n      if (Tipo == 'js') {\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = scriptUrl;\n        document.body.appendChild(script);\n      } else if (Tipo === 'css') {\n        const link = document.createElement('link');\n        link.rel = 'stylesheet';\n        link.type = 'text/css';\n        link.href = scriptUrl;\n        document.head.appendChild(link);\n      }\n    }\n    scrollToSection(elementId) {\n      const elementToScrollTo = document.getElementById(elementId);\n      if (elementToScrollTo) {\n        elementToScrollTo.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    }\n  }\n  MysqlComponent.ɵfac = function MysqlComponent_Factory(t) {\n    return new (t || MysqlComponent)();\n  };\n  MysqlComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MysqlComponent,\n    selectors: [[\"app-mysql\"]],\n    decls: 115,\n    vars: 1,\n    consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [1, \"global\"], [1, \"toc\"], [3, \"tableOfContents\", \"scrollToElement\"], [1, \"content\"], [\"id\", \"section1\"], [\"href\", \"https://cloud.google.com/shell?hl=es\"], [\"src\", \"./assets/images/mysql/console.png\", \"alt\", \"\", 2, \"display\", \"block\", \"margin-left\", \"auto\", \"margin-right\", \"auto\", \"max-width\", \"90%\"], [\"src\", \"./assets/images/mysql/active_shell.png\", \"alt\", \"\", 2, \"display\", \"block\", \"margin-left\", \"auto\", \"margin-right\", \"auto\", \"max-width\", \"90%\"], [\"src\", \"./assets/images/mysql/open_editor.png\", \"alt\", \"\", 2, \"display\", \"block\", \"margin-left\", \"auto\", \"margin-right\", \"auto\", \"max-width\", \"90%\"], [\"src\", \"./assets/images/mysql/code_oss.png\", \"alt\", \"\", 2, \"display\", \"block\", \"margin-left\", \"auto\", \"margin-right\", \"auto\", \"max-width\", \"90%\"], [\"id\", \"section2\"], [\"code\", \"docker run -d -p 33060:3306 -v /home/<username>/mysql-data:/var/lib/mysql --name mysql_practice -e MYSQL_ROOT_PASSWORD=mypass mysql:8.2.0\"], [\"id\", \"section3\"], [\"code\", \"docker exec -it mysql_practice bin/bash\"], [\"code\", \"mysql -uroot -p\"], [\"code\", \"CREATE USER 'sqluser'@'%' IDENTIFIED WITH MYSQL_NATIVE_PASSWORD BY 'mysqlpass';\"], [\"code\", \"GRANT ALL PRIVILEGES ON *.* TO 'sqluser'@'%';\"], [\"code\", \"FLUSH PRIVILEGES;\"], [\"src\", \"./assets/images/mysql/mysql_extention.png\", \"alt\", \"\", 2, \"display\", \"block\", \"margin-left\", \"auto\", \"margin-right\", \"auto\", \"max-width\", \"90%\"], [\"src\", \"./assets/images/mysql/add_connection.png\", \"alt\", \"\", 2, \"display\", \"block\", \"margin-left\", \"auto\", \"margin-right\", \"auto\", \"max-width\", \"90%\"], [\"id\", \"section4\"], [\"code\", \"pip install SQLAlchemy PyMySQL\"], [\"code\", \"def Connection(user:str,pswd:str,host:str,port:str,base:str) -> sqlalchemy.engine.Engine:\\n                        try:\\n                            cnx = create_engine(f'mysql+pymysql://{user}:{pswd}@{host}:{port}/{base}')   \\n                            conn = cnx.connect()\\n                        except:\\n                            print('Connection Failed')\"], [\"id\", \"section5\"], [\"code\", \"CREATE DATABASE IF NOT EXISTS MY_DATABASE;\"], [\"code\", \"USE MY_DATABASE;\"], [\"code\", \"CREATE TABLE IF NOT EXISTS MOVIES(id int, name varchar(25));\"], [\"code\", \"insert into MOVIES values(1, 'Super Bad');\"], [\"code\", \"docker exec -i mysql_practice mysqldump -usqluser -pmysqlpass MY_DATABASE>./MY_DATABASE_BACKUP.SQL\"], [\"code\", \"DROP DATABASE MY_DATABASE;\"], [\"code\", \"docker exec -i mysql_practice mysql -usqluser -pmysqlpass MY_DATABASE<./MY_DATABASE_BACKUP.SQL\"]],\n    template: function MysqlComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n        i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n        i0.ɵɵelementStart(4, \"title\");\n        i0.ɵɵtext(5, \"Document\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"body\");\n        i0.ɵɵelement(7, \"app-header\");\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"div\", 4)(10, \"app-table-of-contents\", 5);\n        i0.ɵɵlistener(\"scrollToElement\", function MysqlComponent_Template_app_table_of_contents_scrollToElement_10_listener($event) {\n          return ctx.scrollToSection($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 6)(12, \"div\", 7)(13, \"h2\");\n        i0.ɵɵtext(14, \"Introduction\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p\");\n        i0.ɵɵtext(16, \" In this little practice i will show you to setup your mysql environment using the cloud shell. It is completely free and just take a few minutes. The main advantage is you don't need use your machine's resources or deal with software installation problems neither. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p\");\n        i0.ɵɵtext(18, \" It's just necessary a gmail account and follow the next steps. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"ul\")(20, \"li\");\n        i0.ɵɵtext(21, \" Go to \");\n        i0.ɵɵelementStart(22, \"a\", 8);\n        i0.ɵɵtext(23, \"Cloud Shell\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(24, \" and click console button, there is in the right upper side \");\n        i0.ɵɵelementStart(25, \"p\");\n        i0.ɵɵelement(26, \"img\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"li\");\n        i0.ɵɵtext(28, \" Then, active the cloud shell and open the editor (Code OSS) \");\n        i0.ɵɵelementStart(29, \"p\");\n        i0.ɵɵelement(30, \"img\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"p\");\n        i0.ɵɵelement(32, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"p\");\n        i0.ɵɵelement(34, \"img\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"li\");\n        i0.ɵɵtext(36, \" Next, just open the folder where you'll work. I recommend use /home/<username>/. You can save your docs in /home/<username>/ folder. Cloud shell allows saving 4 gb, enough for this practice. \");\n        i0.ɵɵelementStart(37, \"p\");\n        i0.ɵɵelement(38, \"img\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(39, \"li\");\n        i0.ɵɵtext(40, \" Code OSS is an open source project without any proprietary code. \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(41, \"div\", 13)(42, \"h2\");\n        i0.ɵɵtext(43, \"MySql Installation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"p\");\n        i0.ɵɵtext(45, \"Cloud shell provide many tools and libraries to work like docker, python and java. In this case the installation for MySql will be with docker. The editor is like vs code, so just open a terminal.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"p\");\n        i0.ɵɵtext(47, \"With the next command is possible create a MySql container that save its info in a binding folder called 'mysql-data', map it to the 33060 port, assign the password 'mypass' to the root user and use the version 8.2.0. The container name is mysql_practice. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(48, \"app-code-box\", 14);\n        i0.ɵɵelementStart(49, \"p\");\n        i0.ɵɵtext(50, \" It's import to know that when your session ends in cloud shell the mysql container will be delete. For this reason is necessary map the info to a local folder (-v /home/<username>/mysql-data:/var/lib/mysql), to persist the data. This is a disventage, but run it the command again you'll retrive the container in 5 seconds approx with all info. \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(51, \"div\", 15)(52, \"h2\");\n        i0.ɵɵtext(53, \"Connection from Code OSS\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(54, \"p\");\n        i0.ɵɵtext(55, \" For the connection from editor are necesasry two things. An extention and a new user with appropiate user, because is not possible with the root user. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"p\");\n        i0.ɵɵtext(57, \" So, first i'll create the user. In the terminal type: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(58, \"app-code-box\", 16);\n        i0.ɵɵelementStart(59, \"p\");\n        i0.ɵɵtext(60, \" Now, in the mysql container terminal. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(61, \"app-code-box\", 17);\n        i0.ɵɵelementStart(62, \"p\");\n        i0.ɵɵtext(63, \"In my case the password is 'mypass'. Next, i call my new user 'sqluser'.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(64, \"app-code-box\", 18);\n        i0.ɵɵelementStart(65, \"p\");\n        i0.ɵɵtext(66, \" Grant privileges \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(67, \"app-code-box\", 19);\n        i0.ɵɵelementStart(68, \"p\");\n        i0.ɵɵtext(69, \"and flush privileges.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(70, \"app-code-box\", 20);\n        i0.ɵɵelementStart(71, \"p\");\n        i0.ɵɵtext(72, \" In the second part, just search the extention 'mysql' in the left sidebar and install it. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(73, \"p\");\n        i0.ɵɵelement(74, \"img\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(75, \"p\");\n        i0.ɵɵtext(76, \" Staying in the left sidebar, go back to the explorer section and add a connection with your credentials. For me is 'localhost', 'sqluser','mysqlpass' and '33060'. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(77, \"p\");\n        i0.ɵɵelement(78, \"img\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(79, \"p\");\n        i0.ɵɵtext(80, \"In this point you can code your queries easily.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(81, \"div\", 23)(82, \"h2\");\n        i0.ɵɵtext(83, \"Connection from Python\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(84, \"p\");\n        i0.ɵɵtext(85, \" To connect from python are nedded two requirements, \\\"SQLAlchemy\\\" and \\\"PyMySQL\\\". Run in the terminal with the environment active the command \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(86, \"app-code-box\", 24);\n        i0.ɵɵelementStart(87, \"p\");\n        i0.ɵɵtext(88, \" And you can use the function below \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(89, \"app-code-box\", 25);\n        i0.ɵɵelementStart(90, \"p\");\n        i0.ɵɵtext(91, \" For my case, i just call the function like: Connection('sqluser','mysqlpass','localhost','33060',<database_name>) \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(92, \"div\", 26)(93, \"h2\");\n        i0.ɵɵtext(94, \"Backup and Restore Databases\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(95, \"p\");\n        i0.ɵɵtext(96, \" Finally in the last part of this practice, i'm going to create a database, a table, insert one row, backup the database, drop the database and then restore it. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(97, \"p\");\n        i0.ɵɵtext(98, \" I'll do the backup and restore of the database passing the command from docker, the rest of command will be inside the mysql container. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(99, \"p\");\n        i0.ɵɵtext(100, \" First open the bash container and then open mysql terminal. Like i did to create the user \\\"sqluser\\\". \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(101, \"app-code-box\", 16)(102, \"p\")(103, \"app-code-box\", 17);\n        i0.ɵɵelementStart(104, \"p\");\n        i0.ɵɵtext(105, \"Then\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(106, \"app-code-box\", 27)(107, \"app-code-box\", 28)(108, \"app-code-box\", 29)(109, \"app-code-box\", 30)(110, \"app-code-box\", 31)(111, \"app-code-box\", 32);\n        i0.ɵɵelementStart(112, \"p\");\n        i0.ɵɵtext(113, \" Note, before to restore the database with all tables must be exists a empty database. So, i create the database again after drop it. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(114, \"app-code-box\", 33);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"tableOfContents\", ctx.tableOfContents);\n      }\n    },\n    dependencies: [i1.HeaderComponent, i2.TableOfContentsComponent, i3.CodeBoxComponent],\n    styles: [\".global[_ngcontent-%COMP%]{display:flex;flex-direction:row;width:100%;height:90vh;background-color:#000;position:relative}.toc[_ngcontent-%COMP%]{display:flex;flex:1.1}.content[_ngcontent-%COMP%]{padding:2.1%;flex:3.5;border-style:groove;border-color:gray;border-top-right-radius:20px;border-bottom-right-radius:20px;background-color:#fff;overflow-y:scroll}p[_ngcontent-%COMP%]{text-indent:2em}\"]\n  });\n  return MysqlComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}