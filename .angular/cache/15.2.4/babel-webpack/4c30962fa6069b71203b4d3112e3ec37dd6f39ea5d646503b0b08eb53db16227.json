{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../header/header.component\";\nimport * as i2 from \"../table-of-contents/table-of-contents.component\";\nimport * as i3 from \"../code-box/code-box.component\";\nexport class MysqlComponent {\n  constructor() {\n    this.tableOfContents = [['section1', 'Introduction'], ['section2', 'MySQL Installation'], ['section3', 'Connection from Code OSS'], ['section4', 'Connection from Python'], ['section5', 'Backup and Restore Databases']];\n    this.sections = [[]];\n  }\n  ngOnInit() {\n    this.loadScript('./assets/prism.js', 'js');\n    window.onload = () => {\n      this.loadScript('./assets/main.js', 'js');\n    };\n  }\n  loadScript(scriptUrl, Tipo) {\n    if (Tipo == 'js') {\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = scriptUrl;\n      document.body.appendChild(script);\n    } else if (Tipo === 'css') {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.type = 'text/css';\n      link.href = scriptUrl;\n      document.head.appendChild(link);\n    }\n  }\n  scrollToSection(elementId) {\n    const elementToScrollTo = document.getElementById(elementId);\n    if (elementToScrollTo) {\n      elementToScrollTo.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }\n}\nMysqlComponent.ɵfac = function MysqlComponent_Factory(t) {\n  return new (t || MysqlComponent)();\n};\nMysqlComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MysqlComponent,\n  selectors: [[\"app-mysql\"]],\n  decls: 81,\n  vars: 1,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [1, \"global\"], [1, \"toc\"], [3, \"tableOfContents\", \"scrollToElement\"], [1, \"content\"], [\"id\", \"section1\"], [\"href\", \"https://cloud.google.com/shell?hl=es\"], [\"src\", \"./assets/images/mysql/console.png\", \"alt\", \"\", 2, \"display\", \"block\", \"margin-left\", \"auto\", \"margin-right\", \"auto\", \"max-width\", \"90%\"], [\"src\", \"./assets/images/mysql/active_shell.png\", \"alt\", \"\", 2, \"display\", \"block\", \"margin-left\", \"auto\", \"margin-right\", \"auto\", \"max-width\", \"90%\"], [\"src\", \"./assets/images/mysql/open_editor.png\", \"alt\", \"\", 2, \"display\", \"block\", \"margin-left\", \"auto\", \"margin-right\", \"auto\", \"max-width\", \"90%\"], [\"src\", \"./assets/images/mysql/code_oss.png\", \"alt\", \"\", 2, \"display\", \"block\", \"margin-left\", \"auto\", \"margin-right\", \"auto\", \"max-width\", \"90%\"], [\"id\", \"section2\"], [\"code\", \"docker run -d -p 33060:3306 -v /home/<username>/mysql-data:/var/lib/mysql --name mysql_practice -e MYSQL_ROOT_PASSWORD=mypass mysql:8.2.0\"], [\"id\", \"section3\"], [\"code\", \"docker exec -it mysql_practice bin/bash\"], [\"code\", \"mysql -uroot -p\"], [\"code\", \"CREATE USER 'sqluser'@'%' IDENTIFIED WITH MYSQL_NATIVE_PASSWORD BY 'mysqlpass';\"], [\"code\", \"GRANT ALL PRIVILEGES ON *.* TO 'sqluser'@'%';\"], [\"code\", \"FLUSH PRIVILEGES;\"], [\"id\", \"section4\"], [\"id\", \"section5\"]],\n  template: function MysqlComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n      i0.ɵɵelementStart(4, \"title\");\n      i0.ɵɵtext(5, \"Document\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"body\");\n      i0.ɵɵelement(7, \"app-header\");\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"div\", 4)(10, \"app-table-of-contents\", 5);\n      i0.ɵɵlistener(\"scrollToElement\", function MysqlComponent_Template_app_table_of_contents_scrollToElement_10_listener($event) {\n        return ctx.scrollToSection($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 6)(12, \"div\", 7)(13, \"h2\");\n      i0.ɵɵtext(14, \"Introduction\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"p\");\n      i0.ɵɵtext(16, \" In this little practice i will show you to setup your mysql environment using the cloud shell. It is completely free and just take a few minutes. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"p\");\n      i0.ɵɵtext(18, \" It's just necessary a gmail account and follow the next steps. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"ul\")(20, \"li\");\n      i0.ɵɵtext(21, \" Go to \");\n      i0.ɵɵelementStart(22, \"a\", 8);\n      i0.ɵɵtext(23, \"Cloud Shell\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(24, \" and click console button, there is in the right upper side \");\n      i0.ɵɵelementStart(25, \"p\");\n      i0.ɵɵelement(26, \"img\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"li\");\n      i0.ɵɵtext(28, \" Then, active the cloud shell and open the editor (Code OSS) \");\n      i0.ɵɵelementStart(29, \"p\");\n      i0.ɵɵelement(30, \"img\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"p\");\n      i0.ɵɵelement(32, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"p\");\n      i0.ɵɵelement(34, \"img\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(35, \"li\");\n      i0.ɵɵtext(36, \" Next, just open the folder where you'll work. I recommend use /home/<username>/. You can save your docs in /home/<username>/ folder. Cloud shell allows saving 4 gb, enough for this practice. \");\n      i0.ɵɵelementStart(37, \"p\");\n      i0.ɵɵelement(38, \"img\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(39, \"li\");\n      i0.ɵɵtext(40, \" Code OSS is an open source project without any proprietary code. \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(41, \"div\", 13)(42, \"h2\");\n      i0.ɵɵtext(43, \"MySql Installation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"p\");\n      i0.ɵɵtext(45, \"Cloud shell provide many tools and libraries to work like docker, python and java. In this case the installation for MySql will be with docker. The editor is like vs code, so just open a terminal.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"p\");\n      i0.ɵɵtext(47, \"With the next command is possible create a MySql container that save its info in a binding folder called 'mysql-data', map it to the 33060 port, assign the password 'mypass' to the root user and use the version 8.2.0. The container name is mysql_practice. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(48, \"app-code-box\", 14);\n      i0.ɵɵelementStart(49, \"p\");\n      i0.ɵɵtext(50, \" It's import to know that when your session ends in cloud shell the mysql container will be delete. For this reason is necessary map the info to a local folder (-v /home/<username>/mysql-data:/var/lib/mysql), to persist the data. This is a disventage, but run it the command again you'll retrive the container in 5 seconds approx with all info. \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(51, \"div\", 15)(52, \"h2\");\n      i0.ɵɵtext(53, \"Connection from Code OSS\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(54, \"p\");\n      i0.ɵɵtext(55, \" For the connection from editor are necesasry two things. An extention and a new user with appropiate user, because is not possible with the root user. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(56, \"p\");\n      i0.ɵɵtext(57, \" So, first i'll create the user. In the terminal type: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(58, \"app-code-box\", 16);\n      i0.ɵɵelementStart(59, \"p\");\n      i0.ɵɵtext(60, \" Now, in the mysql container terminal. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(61, \"app-code-box\", 17);\n      i0.ɵɵelementStart(62, \"p\");\n      i0.ɵɵtext(63, \"In my case the password is 'mypass'. Next, i call my new user 'sqluser'.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(64, \"app-code-box\", 18);\n      i0.ɵɵelementStart(65, \"p\");\n      i0.ɵɵtext(66, \" Grant privileges \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(67, \"app-code-box\", 19);\n      i0.ɵɵelementStart(68, \"p\");\n      i0.ɵɵtext(69, \"and flush privileges.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(70, \"app-code-box\", 20);\n      i0.ɵɵelementStart(71, \"p\");\n      i0.ɵɵtext(72, \" In the second part, just search the extention 'mysql' in the left sidebar \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(73, \"p\");\n      i0.ɵɵelement(74, \"img\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(75, \"div\", 21)(76, \"h2\");\n      i0.ɵɵtext(77, \"Connection from Python\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(78, \"div\", 22)(79, \"h2\");\n      i0.ɵɵtext(80, \"Backup and Restore Databases\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"tableOfContents\", ctx.tableOfContents);\n    }\n  },\n  dependencies: [i1.HeaderComponent, i2.TableOfContentsComponent, i3.CodeBoxComponent],\n  styles: [\".global[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: row;\\n    width: 100%;\\n    height: 90vh;\\n    background-color: black;\\n    position: relative;\\n}\\n\\n.toc[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex: 1.1;\\n}\\n\\n.content[_ngcontent-%COMP%] {\\n    padding: 2.1%;\\n    flex: 3.5;\\n    border-style: groove;\\n    border-color: grey;\\n    border-top-right-radius: 20px;\\n    border-bottom-right-radius: 20px;\\n    background-color: white;\\n    overflow-y: scroll;\\n}\\n\\np[_ngcontent-%COMP%] {\\n    text-indent: 2em;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9teXNxbC9teXNxbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixXQUFXO0lBQ1gsWUFBWTtJQUNaLHVCQUF1QjtJQUN2QixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsU0FBUztBQUNiOztBQUVBO0lBQ0ksYUFBYTtJQUNiLFNBQVM7SUFDVCxvQkFBb0I7SUFDcEIsa0JBQWtCO0lBQ2xCLDZCQUE2QjtJQUM3QixnQ0FBZ0M7SUFDaEMsdUJBQXVCO0lBQ3ZCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQiIsInNvdXJjZXNDb250ZW50IjpbIi5nbG9iYWwge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDkwdmg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4udG9jIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXg6IDEuMTtcbn1cblxuLmNvbnRlbnQge1xuICAgIHBhZGRpbmc6IDIuMSU7XG4gICAgZmxleDogMy41O1xuICAgIGJvcmRlci1zdHlsZTogZ3Jvb3ZlO1xuICAgIGJvcmRlci1jb2xvcjogZ3JleTtcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMjBweDtcbiAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMjBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XG59XG5cbnAge1xuICAgIHRleHQtaW5kZW50OiAyZW07XG59XG5cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["MysqlComponent","constructor","ngOnInit","loadScript","window","onload","scriptUrl","Tipo","script","document","createElement","type","src","body","appendChild","link","rel","href","head","scrollToSection","elementId","elementToScrollTo","getElementById","scrollIntoView","behavior","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/lmdc/Documents/WebPage/src/app/components/mysql/mysql.component.ts","/home/lmdc/Documents/WebPage/src/app/components/mysql/mysql.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-mysql',\n  templateUrl: './mysql.component.html',\n  styleUrls: ['./mysql.component.css']\n})\nexport class MysqlComponent {\n  \n\n  tableOfContents: Array<string>[]= [\n    ['section1','Introduction'],\n    ['section2','MySQL Installation'],\n    ['section3','Connection from Code OSS'],\n    ['section4','Connection from Python'],\n    ['section5','Backup and Restore Databases']\n  ];\n\n  sections: Array<string>[]=[\n    []\n  ]\n\n  ngOnInit() {      \n    this.loadScript('./assets/prism.js', 'js');\n    window.onload = () => {\n      this.loadScript('./assets/main.js', 'js');\n    };\n  }\n\n  loadScript(scriptUrl: string,Tipo: string) {\n    if (Tipo=='js'){\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = scriptUrl;\n      document.body.appendChild(script);\n    }  else if (Tipo === 'css') {\n      const link = document.createElement('link');\n      link.rel='stylesheet'\n      link.type = 'text/css';\n      link.href = scriptUrl;\n      document.head.appendChild(link);\n    }   \n  }\n\n  scrollToSection(elementId: string): void {\n    const elementToScrollTo = document.getElementById(elementId);\n    if (elementToScrollTo) {\n      elementToScrollTo.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <app-header></app-header>\n\n    <div class=\"global\">\n        <div class=\"toc\">\n            <app-table-of-contents [tableOfContents]=\"tableOfContents\"\n                (scrollToElement)=\"scrollToSection($event)\"></app-table-of-contents>\n        </div>\n\n        <div class=\"content\">\n            <div id=\"section1\">\n                <h2>Introduction</h2>\n                <p>\n                    In this little practice i will show you to setup your mysql environment using the cloud shell.\n                It is completely free and just take a few minutes.                \n                </p>\n                <p>\n                    It's just necessary a gmail account and follow the next steps.\n                </p>\n                <ul>\n                    <li>\n                        Go to <a href=\"https://cloud.google.com/shell?hl=es\">Cloud Shell</a> and click console button, there is\n                        in the right upper side\n                        <p> <img src=\"./assets/images/mysql/console.png\"\n                            style=\"display: block; margin-left: auto; margin-right: auto; max-width: 90%;\" alt=\"\"></p>\n                    </li>\n                    <li>\n                        Then, active the cloud shell and open the editor (Code OSS)\n                        <p> <img src=\"./assets/images/mysql/active_shell.png\"\n                            style=\"display: block; margin-left: auto; margin-right: auto; max-width: 90%;\" alt=\"\"></p>\n                        <p><br></p>\n                        <p> <img src=\"./assets/images/mysql/open_editor.png\"\n                            style=\"display: block; margin-left: auto; margin-right: auto; max-width: 90%;\" alt=\"\"></p>\n                    </li>\n                    <li>\n                        Next, just open the folder where you'll work. I recommend use /home/&lt;username&gt;/. You can save your docs in\n                        /home/&lt;username&gt;/ folder. Cloud shell allows saving 4 gb, enough for this practice.\n                        <p><img src=\"./assets/images/mysql/code_oss.png\"\n                            style=\"display: block; margin-left: auto; margin-right: auto; max-width: 90%;\" alt=\"\"></p>\n                    </li>\n                    <li>\n                        Code OSS is an open source project without any proprietary code.\n                    </li>\n                </ul>\n            </div>  \n            <div id=\"section2\">\n                <h2>MySql Installation</h2>\n                <p>Cloud shell provide many tools and libraries to work like docker, python and java. \n                    In this case the installation for MySql will be with docker. The editor is like vs code, so just open a terminal.</p>\n                \n                <p>With the next command is possible create a MySql container that save its info in a binding folder called 'mysql-data',\n                    map it to the 33060 port, assign the password 'mypass' to the root user and use the version 8.2.0. The container name is mysql_practice.\n                </p>\n                <app-code-box code=\"docker run -d -p 33060:3306 -v /home/&lt;username&gt;/mysql-data:/var/lib/mysql --name mysql_practice -e MYSQL_ROOT_PASSWORD=mypass mysql:8.2.0\" ></app-code-box>\n                <p>\n                    It's import to know that when your session ends in cloud shell the mysql container will be delete. For this reason is necessary\n                    map the info to a local folder (-v /home/&lt;username&gt;/mysql-data:/var/lib/mysql), to persist the data.\n                    This is a disventage, but run it the command again you'll retrive the container in 5 seconds approx with all info.\n                </p>\n            </div>\n            <div id=\"section3\">\n                <h2>Connection from Code OSS</h2>   \n                <p>\n                    For the connection from editor are necesasry two things. An extention and a new user with appropiate user, \n                    because is not possible with the root user.\n                </p>\n                <p>\n                    So, first i'll create the user. In the terminal type:\n                </p>\n                <app-code-box code=\"docker exec -it mysql_practice bin/bash\" ></app-code-box>\n                <p>\n                    Now, in the mysql container terminal.\n                </p>\n                <app-code-box code=\"mysql -uroot -p\" ></app-code-box>\n                <p>In my case the password is 'mypass'. Next, i call my new user 'sqluser'.</p>\n                <app-code-box code=\"CREATE USER 'sqluser'@'%' IDENTIFIED WITH MYSQL_NATIVE_PASSWORD BY 'mysqlpass';\" ></app-code-box>\n                <p>\n                    Grant privileges\n                </p>\n                <app-code-box code=\"GRANT ALL PRIVILEGES ON *.* TO 'sqluser'@'%';\"></app-code-box>\n                <p>and flush privileges.</p>\n                <app-code-box code=\"FLUSH PRIVILEGES;\"></app-code-box>\n                <p>\n                    In the second part, just search the extention 'mysql' in the left sidebar\n                </p>                \n                <p><img src=\"./assets/images/mysql/code_oss.png\"\n                    style=\"display: block; margin-left: auto; margin-right: auto; max-width: 90%;\" alt=\"\"></p>\n            </div>\n            <div id=\"section4\">\n                <h2>Connection from Python</h2>\n            </div>\n            <div id=\"section5\">\n                <h2>Backup and Restore Databases</h2>\n            </div>\n        </div>\n    </div>\n</body>\n</html>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}